Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> statement_list
Rule 2     statement_list -> statement_list statement
Rule 3     statement_list -> statement
Rule 4     statement -> LET IDENTIFIER EQUALS NUMBER NEWLINE
Rule 5     statement -> SHOW IDENTIFIER NEWLINE
Rule 6     statement -> RANGE NUMBER TO NUMBER DO NEWLINE statement_list

Terminals, with rules where they appear

DO                   : 6
EQUALS               : 4
IDENTIFIER           : 4 5
LET                  : 4
NEWLINE              : 4 5 6
NUMBER               : 4 6 6
RANGE                : 6
SHOW                 : 5
TO                   : 6
error                : 

Nonterminals, with rules where they appear

program              : 0
statement            : 2 3
statement_list       : 1 2 6

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement_list
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . LET IDENTIFIER EQUALS NUMBER NEWLINE
    (5) statement -> . SHOW IDENTIFIER NEWLINE
    (6) statement -> . RANGE NUMBER TO NUMBER DO NEWLINE statement_list

    LET             shift and go to state 4
    SHOW            shift and go to state 5
    RANGE           shift and go to state 6

    program                        shift and go to state 1
    statement_list                 shift and go to state 2
    statement                      shift and go to state 3

state 1

    (0) S' -> program .



state 2

    (1) program -> statement_list .
    (2) statement_list -> statement_list . statement
    (4) statement -> . LET IDENTIFIER EQUALS NUMBER NEWLINE
    (5) statement -> . SHOW IDENTIFIER NEWLINE
    (6) statement -> . RANGE NUMBER TO NUMBER DO NEWLINE statement_list

    $end            reduce using rule 1 (program -> statement_list .)
    LET             shift and go to state 4
    SHOW            shift and go to state 5
    RANGE           shift and go to state 6

    statement                      shift and go to state 7

state 3

    (3) statement_list -> statement .

    LET             reduce using rule 3 (statement_list -> statement .)
    SHOW            reduce using rule 3 (statement_list -> statement .)
    RANGE           reduce using rule 3 (statement_list -> statement .)
    $end            reduce using rule 3 (statement_list -> statement .)


state 4

    (4) statement -> LET . IDENTIFIER EQUALS NUMBER NEWLINE

    IDENTIFIER      shift and go to state 8


state 5

    (5) statement -> SHOW . IDENTIFIER NEWLINE

    IDENTIFIER      shift and go to state 9


state 6

    (6) statement -> RANGE . NUMBER TO NUMBER DO NEWLINE statement_list

    NUMBER          shift and go to state 10


state 7

    (2) statement_list -> statement_list statement .

    LET             reduce using rule 2 (statement_list -> statement_list statement .)
    SHOW            reduce using rule 2 (statement_list -> statement_list statement .)
    RANGE           reduce using rule 2 (statement_list -> statement_list statement .)
    $end            reduce using rule 2 (statement_list -> statement_list statement .)


state 8

    (4) statement -> LET IDENTIFIER . EQUALS NUMBER NEWLINE

    EQUALS          shift and go to state 11


state 9

    (5) statement -> SHOW IDENTIFIER . NEWLINE

    NEWLINE         shift and go to state 12


state 10

    (6) statement -> RANGE NUMBER . TO NUMBER DO NEWLINE statement_list

    TO              shift and go to state 13


state 11

    (4) statement -> LET IDENTIFIER EQUALS . NUMBER NEWLINE

    NUMBER          shift and go to state 14


state 12

    (5) statement -> SHOW IDENTIFIER NEWLINE .

    LET             reduce using rule 5 (statement -> SHOW IDENTIFIER NEWLINE .)
    SHOW            reduce using rule 5 (statement -> SHOW IDENTIFIER NEWLINE .)
    RANGE           reduce using rule 5 (statement -> SHOW IDENTIFIER NEWLINE .)
    $end            reduce using rule 5 (statement -> SHOW IDENTIFIER NEWLINE .)


state 13

    (6) statement -> RANGE NUMBER TO . NUMBER DO NEWLINE statement_list

    NUMBER          shift and go to state 15


state 14

    (4) statement -> LET IDENTIFIER EQUALS NUMBER . NEWLINE

    NEWLINE         shift and go to state 16


state 15

    (6) statement -> RANGE NUMBER TO NUMBER . DO NEWLINE statement_list

    DO              shift and go to state 17


state 16

    (4) statement -> LET IDENTIFIER EQUALS NUMBER NEWLINE .

    LET             reduce using rule 4 (statement -> LET IDENTIFIER EQUALS NUMBER NEWLINE .)
    SHOW            reduce using rule 4 (statement -> LET IDENTIFIER EQUALS NUMBER NEWLINE .)
    RANGE           reduce using rule 4 (statement -> LET IDENTIFIER EQUALS NUMBER NEWLINE .)
    $end            reduce using rule 4 (statement -> LET IDENTIFIER EQUALS NUMBER NEWLINE .)


state 17

    (6) statement -> RANGE NUMBER TO NUMBER DO . NEWLINE statement_list

    NEWLINE         shift and go to state 18


state 18

    (6) statement -> RANGE NUMBER TO NUMBER DO NEWLINE . statement_list
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . LET IDENTIFIER EQUALS NUMBER NEWLINE
    (5) statement -> . SHOW IDENTIFIER NEWLINE
    (6) statement -> . RANGE NUMBER TO NUMBER DO NEWLINE statement_list

    LET             shift and go to state 4
    SHOW            shift and go to state 5
    RANGE           shift and go to state 6

    statement_list                 shift and go to state 19
    statement                      shift and go to state 3

state 19

    (6) statement -> RANGE NUMBER TO NUMBER DO NEWLINE statement_list .
    (2) statement_list -> statement_list . statement
    (4) statement -> . LET IDENTIFIER EQUALS NUMBER NEWLINE
    (5) statement -> . SHOW IDENTIFIER NEWLINE
    (6) statement -> . RANGE NUMBER TO NUMBER DO NEWLINE statement_list

  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for SHOW resolved as shift
  ! shift/reduce conflict for RANGE resolved as shift
    $end            reduce using rule 6 (statement -> RANGE NUMBER TO NUMBER DO NEWLINE statement_list .)
    LET             shift and go to state 4
    SHOW            shift and go to state 5
    RANGE           shift and go to state 6

  ! LET             [ reduce using rule 6 (statement -> RANGE NUMBER TO NUMBER DO NEWLINE statement_list .) ]
  ! SHOW            [ reduce using rule 6 (statement -> RANGE NUMBER TO NUMBER DO NEWLINE statement_list .) ]
  ! RANGE           [ reduce using rule 6 (statement -> RANGE NUMBER TO NUMBER DO NEWLINE statement_list .) ]

    statement                      shift and go to state 7
WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LET in state 19 resolved as shift
WARNING: shift/reduce conflict for SHOW in state 19 resolved as shift
WARNING: shift/reduce conflict for RANGE in state 19 resolved as shift
